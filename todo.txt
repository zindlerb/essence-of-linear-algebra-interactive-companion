[x] abstract equation for vector multiplication
[x] colors for vector multiplication
[x] add text to each section
[x] fix scrubbers to work better
[ ] external link
[ ] italics for variables
[ ] colors for variables in text
[ ] skew the coordinate grid for alternate basis vectors?
	[ ] no to match the tutorial
[ ] mobile
[ ] firefox, safari
[ ] ipad handling

blog post:
	how do closures in js work?

should alternate basis vectors have a diff backing coordinate system?


At video 4 clean up whole post
DesignSpace
TweakSpace
DesignTweak
TweakSpace

Permute

	- load in variable
		array of fonts
		array of colors
	- tie variable to array of strings
	- each variable has a tag
		css property associated with variable,
	- then each of the different properties can be scubbed and favorites can be saved
	- some things want to be sets - this color with this color?
		- not essential.
	- for some things you just want a number
	- relational things like (complementary?)
Chrome extension?


[ ] fonts
[ ]








What operations is the user doing?
How can these be made simpler?



To resolve hovering issues:
	- mouse move at root of svg - use target element to determing (is this vector, is this span doc, is this other..)
	- or



rgb(216, 155, 234)
rgb(146, 191, 216)
introduce pointVector operations?
point vector is a good name

span some angles produce decimal values

[ ] get the span dots to render correctly
	[ ] split up components into seperate ones
	[ ] create global state store - global cursor
	[ ] get the correct ordering of rendering
		grid
		dots
		vec
[ ] mimic the cool span dot color
[ ] get hover working
	[ ] lowlight all other ones when hovering
	[ ] event listenders
	[ ] lowlight vectors
	[ ] show the vector that belongs there
	[ ] show symbolic side
[ ] vertical does not work for the span
[ ] rename coordinate graph
	[ ] VectorsWithGrid or something


    fill: rgb(14, 125, 228);
    stroke: white;
    stroke-width: 3px;
    r: 9;
color a:
#B24BD0
color b:
#39778B

hovering the symbolic vector lowlights all of the other symbols


[x] move vector into position for example 1
[x] add text
[x] do addition example
[x] add text
[x] add scaling feature
[x] do multiplication example
[x] add scrubbing for number
[x] fix up styling and spacing (addition)
[x] have option without grid line
	[x] match the no grid line examples from 3b1b
[x] add labels to axis
[x] unit vectors
[x] favicon [1, 2] of vector
	[x] figure out how to make a good looking favicon
[x] title on page

[ ] add timestamps to each section
[ ] revise text
[ ] assemble td's for span example
[ ] hover to highligth unit vector
[ ] scrubbable numbers on the symbolic vector
[ ] fix the jankiness of multiplication example
[ ] tab to cycle through selected vector?







[x] component to render symbolic vectors
	[x] add prop types
[ ] modify api of the graph renderer
  [x] remove data class
  [x] remove state service
	[x] hook up symbolic and vector display
	[x] make cursor allways display while dragging
	[x] scale grid. Make the drag snap to grid lines
	[x] fix the 0 and 1 on coordinate grid
	[x] disallow dragging off of the edge
	[ ] add background grid disabling
		ticks - match 3 brown
  [ ] clean up vector styles
		[x] grabby hand
		[ ] try to match the 3blue1brown
		[x] dot should signify when the user hovers
			[x] get slightly bigger
		[x] dot should not be so close to arrow head

		[ ] need to have ticks
	[ ] add labeling of axis
	[ ] Add scaling handle
[ ] passable prop for if it is scrubbable or not
	[ ] onhover for data points
		general onhover that returns the col and row
  [ ] I should probably have an onchange for each
    it is the responsibility of the caller to set the new value
    [
      { onChange: (newVal) => , value },
    ]

    or just:
    [
      [10, 10],
      [20, 20],
    ]

    onDrag =>
           return new vector whole
[ ] create regular example example
	[ ] line up symbolid and graph - make sure graph is big enough
[ ] create addition example
[ ] create multiplication
[ ] clean up text revise
[ ] Watch video 2

CoordinateGraph
	spanVectors={[
		vec1,
		vec2
	]}
	// low light all dots on hover
	onHoverSpanDot{({x, y}) => {
		// lowlight all dots
	}}


<SvgContainer> // padding attribute. use transform, takes size
<SvgContainer>

<SpanGrid basisVectors={} size={} onHoverSpanDot={} /> // overlaid onto coordinate graph

Deeper issues:
	flipped y axis?
